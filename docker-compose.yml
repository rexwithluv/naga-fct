services:
  db:
    image: mariadb:lts
    container_name: naga-mariadb
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
    volumes:
      - naga-db:/var/lib/mysql
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - naga-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  pma:
    image: phpmyadmin:latest
    container_name: naga-pma
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=${MARIADB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:80
    networks:
      - naga-network

  backend:
    image: maven:latest
    environment:
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - SPRING_PROFILES_ACTIVE=dev
    container_name: naga-springboot
    command: mvn org.springframework.boot:spring-boot-maven-plugin:run
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - 9000:8080
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "--quiet",
          "http://localhost:8080/actuator/health/liveness",
        ]
      start_period: 20s
      interval: 7s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    networks:
      - naga-network

  frontend:
    image: node:22-alpine
    container_name: naga-vue
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: npm run dev
    ports:
      - 5173:5173
    networks:
      - naga-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  naga-network:
    name: naga-network
    driver: bridge

volumes:
  naga-db:
    name: naga-db
